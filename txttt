int	first_change(int i, t_node node, char *txt)
{
	free(node.args[i]);
	node.args[i] = ft_strdup(txt);
	while (node.args[++i] && node.args[i + 1])
	{
		free(node.args[i]);
		node.args[i] = ft_strdup(node.args[i + 1]);
	}
	free(node.args[i]);
	node.args[i] = NULL;
	return (i);
}

void	node_change(t_node node, int i, int flag, char *txt)
{
	if (g_va->heredoc_count_node > 1)
	{
		free(node.args[1]);
		node.args[1] = ft_strdup(txt);
	}
	if (flag == 1 && !ft_strcmp(node.args[0], "export")
		&& !ft_strcmp(node.args[0], "echo") && !ft_strcmp(node.args[0], "ls")
		&& !ft_strcmp(node.args[0], "cd"))
		i = first_change(i, node, txt);
	else
	{
		if (node.args[i][0] == '<' && node.args[i][1] == '<')
		{
			while (node.args[i] && node.args[i + 2])
			{
				free(node.args[i]);
				node.args[i] = ft_strdup(node.args[i + 2]);
				i++;
			}
			while (node.args[i])
			{
				free(node.args[i]);
				node.args[i] = NULL;
			}
		}
	}
}





// **************
void	node_change(t_node node, int i, int flag, char *txt)
{
	if (g_va->heredoc_count_node > 1)
	{
		free(node.args[1]);
		node.args[1] = ft_strdup(txt);
	}
	if (flag == 1 && !ft_strcmp(node.args[0], "export")
		&& !ft_strcmp(node.args[0], "echo") && !ft_strcmp(node.args[0], "ls")
		&& !ft_strcmp(node.args[0], "cd"))
	{
		free(node.args[i]);
		node.args[i] = ft_strdup(txt);
		while (node.args[++i] && node.args[i + 1])
		{
			free(node.args[i]);
			node.args[i] = ft_strdup(node.args[i + 1]);
		}
		free(node.args[i]);
		node.args[i] = NULL;
	}
	else
	{
		if (node.args[i][0] == '<' && node.args[i][1] == '<')
		{
			while (node.args[i] && node.args[i + 2])
			{
				free(node.args[i]);
				node.args[i] = ft_strdup(node.args[i + 2]);
				i++;
			}
			while (node.args[i])
			{
				free(node.args[i]);
				node.args[i] = NULL;
			}
		}
	}
}

//*********
